class t{x;y;w;h;constructor(t,e,i,s){this.x=t,this.y=e,this.w=i,this.h=s}get left(){return this.x}get right(){return this.x+this.w}get top(){return this.y}get bottom(){return this.y+this.h}get center(){return{x:this.x+this.w/2,y:this.y+this.h/2}}get size(){return{x:this.w,y:this.h}}get top_left(){return{x:this.x,y:this.y}}contains(t){return t.x>=this.x&&t.x<this.x+this.w&&t.y>=this.y&&t.y<this.y+this.h}intersects(t){return this.x<t.x+t.w&&t.x<this.x+this.w&&this.y<t.y+t.h&&t.y<this.y+this.w}draw(t){let e=t.fillStyle;t.strokeStyle="#ff0000",t.beginPath(),t.rect(this.x,this.y,this.w,this.h),t.stroke(),t.strokeStyle=e}}class e{lives;color;x;y;vx;vy;active;AABB;constructor(t,i,s,r,n=null){this.color=n||e.randomHexColor(),this.active=!0,this.lives=100,this.x=t,this.y=i,this.vx=s,this.vy=r}get center(){return{x:this.x,y:this.y}}draw(t){}move(){}handleCollision(t=!1){if(!t){if(this.lives--,0===this.lives){this.active=!1;return}this.color=e.randomHexColor()}}static randomHexColor(){return"#"+Math.floor(16777215*Math.random()).toString(16)}static radians(t){return t*Math.PI/180}}class i extends e{r;constructor(e,i,s,r,n,h=null){super(e,i,r,n,h),this.r=s,this.AABB=new t(this.x-this.r,this.y-this.r,2*this.r,2*this.r)}draw(t){let e=t.fillStyle;t.fillStyle=this.color,t.beginPath(),t.arc(this.x,this.y,this.r,0,2*Math.PI),t.fill(),t.stroke(),t.fillStyle=e}move(){this.x+=this.vx,this.y+=this.vy,this.AABB.x+=this.vx,this.AABB.y+=this.vy}}class s extends e{r;n;vertices;constructor(i,s,r,n,h,o,l=null){let c;super(i,s,h,o,l),this.n=r,this.r=n;let a=360/this.n,y=e.radians(a);c=r%2==0?e.radians(-90-a/2):e.radians(-90),this.vertices=[];for(let t=0;t<this.n;t++)this.vertices.push({x:this.x+this.r*Math.cos(c),y:this.y+this.r*Math.sin(c)}),c+=y;let d=this.vertices.reduce((t,e)=>t.x<e.x?t:e).x,x=this.vertices.reduce((t,e)=>t.x>e.x?t:e).x,u=this.vertices.reduce((t,e)=>t.y<e.y?t:e).y,f=this.vertices.reduce((t,e)=>t.y>e.y?t:e).y;this.AABB=new t(d,u,x-d,f-u)}draw(t){let e=t.fillStyle;t.fillStyle=this.color,t.beginPath(),t.moveTo(this.vertices[0].x,this.vertices[0].y);for(let e=1;e<this.n;e++)t.lineTo(this.vertices[e].x,this.vertices[e].y);t.lineTo(this.vertices[0].x,this.vertices[0].y),t.fill(),t.stroke(),t.fillStyle=e}move(){this.vertices.forEach((t,e)=>{t.x+=this.vx,t.y+=this.vy}),this.AABB.x+=this.vx,this.AABB.y+=this.vy}}class r{static AABBOverlap(t,e){return t.AABB.intersects(e.AABB)}static PreciseOverlap(t,e){if(t instanceof i){if(e instanceof i)return r.#t(t,e);if(e instanceof s)return r.#e(e,t);throw Error("invalid object type")}if(t instanceof s){if(e instanceof i)return r.#e(t,e);if(e instanceof s)return r.#i(t,e)}throw Error("invalid object type")}static dist(t,e){let i=e.x-t.x,s=e.y-t.y;return Math.sqrt(i*i+s*s)}static #t(t,e){return this.dist(t,e)<=t.r+e.r}static #s(t,e){return this.dist(e,t)<=e.r}static #r(t,e,i){let s=this.dist(t,e),r=this.dist(t,i),n=this.dist(e,i);return n-.1<=s+r&&s+r<=n+.1}static #n(t,e,i){let s=this.#s(t,i),r=this.#s(e,i);if(s||r)return!0;let n=this.dist(e,t),h=((i.x-t.x)*(e.x-t.x)+(i.y-t.y)*(e.y-t.y))/(n*n),o={x:t.x+h*(e.x-t.x),y:t.y+h*(e.y-t.y)};return!!this.#r(o,t,e)&&this.dist(o,i)<=i.r}static #h(t,e,i,s){let r=((s.x-i.x)*(t.y-i.y)-(s.y-i.y)*(t.x-i.x))/((s.y-i.y)*(e.x-t.x)-(s.x-i.x)*(e.y-t.y)),n=((e.x-t.x)*(t.y-i.y)-(e.y-t.y)*(t.x-i.x))/((s.y-i.y)*(e.x-t.x)-(s.x-i.x)*(e.y-t.y));return 0<=r&&r<=1&&0<=n&&n<=1}static #e(t,e){let i=t.vertices;if(this.#o(t,e))return!0;let s=0;for(let t=0;t<i.length;t++){(s=t+1)===i.length&&(s=0);let r=i[t],n=i[s];if(this.#n(r,n,e))return!0}return!1}static #o(t,e){let i=t.vertices,s=!1,r=0;for(let t=0;t<i.length;t++){(r=t+1)===i.length&&(r=0);let n=i[t],h=i[r];(n.y>=e.y&&h.y<e.y||n.y<e.y&&h.y>=e.y)&&e.x<(h.x-n.x)*(e.y-n.y)/(h.y-n.y)+n.x&&(s=!s)}return s}static #l(t,e,i){let s=t.vertices,r=0;for(let t=0;t<s.length;t++){(r=t+1)===s.length&&(r=0);let n=s[t],h=s[r];if(this.#h(e,i,n,h))return!0}return!1}static #i(t,e){if(this.#o(e,t)||this.#o(t,e))return!0;let i=t.vertices,s=0;for(let t=0;t<i.length;t++){(s=t+1)===i.length&&(s=0);let r=i[t],n=i[s];if(this.#l(e,r,n))return!0}return!1}}class n{children;objects;constructor(){this.children=[],this.objects=[]}get isLeaf(){return 0===this.children.length}}class h{#c;#a;#y;#d;constructor(e,i=16,s=8){if(!e)throw TypeError("boundary is null or undefined");if(!(e instanceof t))throw TypeError("boundary should be a Rectangle");this.#c=e,this.#y=i,this.#d=new n,this.#a=s}get nodes(){return this.#d}static #x(e,i){let s=e.top_left,r=e.size;switch(r.x/=2,r.y/=2,i){case 0:return new t(s.x,s.y,r.x,r.y);case 1:return new t(s.x+r.x,s.y,r.x,r.y);case 2:return new t(s.x,s.y+r.y,r.x,r.y);case 3:return new t(s.x+r.x,s.y+r.y,r.x,r.y);default:throw Error(`invalid child index: ${i}`)}}static #u(t,e){let i=t.center;return e.right<i.x?e.bottom<i.y?0:e.top>=i.y?2:-1:e.left>=i.x?e.bottom<i.y?1:e.top>=i.y?3:-1:-1}#f(t,e,i,s){if(t.isLeaf)e>=this.#a||t.objects.length<this.#y?t.objects.push(s):(this.#v(t,i),this.#f(t,e,i,s));else{let r=h.#u(i,s.AABB);-1!==r?this.#f(t.children[r],e+1,h.#x(i,r),s):t.objects.push(s)}}#v(t,e){for(let e=0;e<4;e++)t.children.push(new n);let i=[];t.objects.forEach(s=>{let r=h.#u(e,s.AABB);-1!==r?t.children[r].objects.push(s):i.push(s)}),t.objects=i}#w(t,e,i){if(t.isLeaf)return this.#g(t,i),!0;{let s=h.#u(e,i.AABB);if(-1!==s){if(this.#w(t.children[s],h.#x(e,s),i))return this.#p(t)}else this.#g(t,i);return!1}}#g(t,e){let i=t.objects.findIndex(t=>e===t);-1!==i&&t.objects.splice(i,1)}#p(t){let e=t.objects.length;for(let i=0;i<t.children.length;i++){let s=t.children[i];if(!s.isLeaf)return!1;e+=s.objects.length}return e<=this.#y&&(t.children.forEach(e=>{t.objects.push(...e.objects)}),t.children=[],!0)}#A(t,e){for(let i=0;i<t.objects.length;i++)for(let s=0;s<i;s++)t.objects[i].AABB.intersects(t.objects[s].AABB)&&e.push([t.objects[i],t.objects[s]]);t.isLeaf||(t.children.forEach(i=>{t.objects.forEach(t=>{this.#b(i,t,e)})}),t.children.forEach(t=>{this.#A(t,e)}))}#b(t,e,i){t.objects.forEach(t=>{e.AABB.intersects(t.AABB)&&i.push([e,t])}),t.isLeaf||t.children.forEach(t=>{this.#b(t,e,i)})}add(t){this.#f(this.#d,0,this.#c,t)}remove(t){this.#w(this.#d,this.#c,t)}findAllIntersections(){let t=[];return this.#A(this.#d,t),t}clear(){this.#d=new n}}const o=document.getElementById("canvas"),l={objects:[]},c=new h(new t(0,0,window.innerWidth,window.innerHeight));for(let t=0;t<666;t++){let t=a(1,window.innerWidth-1),e=a(1,window.innerHeight-1),s=a(1,360),r=2*Math.cos(s),n=2*Math.sin(s);l.objects.push(new i(t,e,2,r,n))}for(let t=0;t<666;t++){let t=a(1,window.innerWidth-1),e=a(1,window.innerHeight-1),i=a(0,360),r=2*Math.cos(i),n=2*Math.sin(i);l.objects.push(new s(t,e,3,2,r,n))}for(let t=0;t<666;t++){let t=a(1,window.innerWidth-1),e=a(1,window.innerHeight-1),i=a(1,360),r=2*Math.cos(i),n=2*Math.sin(i);l.objects.push(new s(t,e,6,2,r,n))}function a(t,e){return Math.random()*(e-t)+t}o.width=window.innerWidth,o.height=window.innerHeight,l.lastTick=performance.now(),l.lastRender=l.lastTick,l.tickLength=15,function t(e){l.stopCycle=window.requestAnimationFrame(t);let i=l.lastTick+l.tickLength,s=0;e>i&&(s=Math.floor((e-l.lastTick)/l.tickLength)),function(t){for(let i=0;i<t;i++){var e;l.lastTick=l.lastTick+l.tickLength,l.lastTick,c.clear(),l.objects.forEach(t=>{t.active&&c.add(t)}),c.findAllIntersections().forEach(([t,e],i)=>{r.PreciseOverlap(t,e)&&(t.vx=-t.vx,t.vy=-t.vy,t.handleCollision(),e.vx=-e.vx,e.vy=-e.vy,e.handleCollision())}),l.objects.forEach(t=>{t.active&&((0>t.AABB.left||window.innerWidth<t.AABB.right)&&(t.vx=-t.vx,t.handleCollision(!0)),(0>t.AABB.top||window.innerHeight<t.AABB.bottom)&&(t.vy=-t.vy,t.handleCollision(!0)),t.move())})}}(s),function(t){let e=o.getContext("2d");e.clearRect(0,0,o.width,o.height),l.objects.forEach(t=>{t.active&&t.draw(e)})}(0),l.lastRender=e}();