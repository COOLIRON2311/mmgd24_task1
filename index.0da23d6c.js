class t{x;y;w;h;constructor(t,i,e,s){this.x=t,this.y=i,this.w=e,this.h=s}get left(){return this.x}get right(){return this.x+this.w}get top(){return this.y}get bottom(){return this.y+this.h}get center(){return{x:this.x+this.w/2,y:this.y+this.h/2}}contains(t){return t.x>=this.x&&t.x<this.x+this.w&&t.y>=this.y&&t.y<this.y+this.h}intersects(t){return this.x<t.x+t.w&&t.x<this.x+this.w&&this.y<t.y+t.h&&t.y<this.y+this.w}draw(t){let i=t.fillStyle;t.strokeStyle="#ff0000",t.beginPath(),t.rect(this.x,this.y,this.w,this.h),t.stroke(),t.strokeStyle=i}}class i{lives;color;x;y;vx;vy;active;AABB;constructor(t,e,s,r,n=null){this.color=n||i.randomHexColor(),this.active=!0,this.lives=3,this.x=t,this.y=e,this.vx=s,this.vy=r}get center(){return{x:this.x,y:this.y}}draw(t){}move(){}handleCollision(t=!1){if(!t){if(this.lives--,0===this.lives){this.active=!1;return}this.color=i.randomHexColor()}}static randomHexColor(){return"#"+Math.floor(16777215*Math.random()).toString(16)}static radians(t){return t*Math.PI/180}}class e extends i{r;constructor(i,e,s,r,n,h=null){super(i,e,r,n,h),this.r=s,this.AABB=new t(this.x-this.r,this.y-this.r,2*this.r,2*this.r)}draw(t){let i=t.fillStyle;t.fillStyle=this.color,t.beginPath(),t.arc(this.x,this.y,this.r,0,2*Math.PI),t.fill(),t.stroke(),t.fillStyle=i}move(){this.x+=this.vx,this.y+=this.vy,this.AABB.x+=this.vx,this.AABB.y+=this.vy}}class s extends i{r;n;vertices;constructor(e,s,r,n,h,l,o=null){let c;super(e,s,h,l,o),this.n=r,this.r=n;let y=360/this.n,a=i.radians(y);c=r%2==0?i.radians(-90-y/2):i.radians(-90),this.vertices=[];for(let t=0;t<this.n;t++)this.vertices.push({x:this.x+this.r*Math.cos(c),y:this.y+this.r*Math.sin(c)}),c+=a;let x=this.vertices.reduce((t,i)=>t.x<i.x?t:i).x,v=this.vertices.reduce((t,i)=>t.x>i.x?t:i).x,d=this.vertices.reduce((t,i)=>t.y<i.y?t:i).y,f=this.vertices.reduce((t,i)=>t.y>i.y?t:i).y;this.AABB=new t(x,d,v-x,f-d)}draw(t){let i=t.fillStyle;t.fillStyle=this.color,t.beginPath(),t.moveTo(this.vertices[0].x,this.vertices[0].y);for(let i=1;i<this.n;i++)t.lineTo(this.vertices[i].x,this.vertices[i].y);t.lineTo(this.vertices[0].x,this.vertices[0].y),t.fill(),t.stroke(),t.fillStyle=i}move(){this.vertices.forEach((t,i)=>{t.x+=this.vx,t.y+=this.vy}),this.AABB.x+=this.vx,this.AABB.y+=this.vy}}class r{static AABBOverlap(t,i){return t.AABB.intersects(i.AABB)}static PreciseOverlap(t,i){if(t instanceof e){if(i instanceof e)return r.#t(t,i);if(i instanceof s)return r.#i(i,t);throw Error("invalid object type")}if(t instanceof s){if(i instanceof e)return r.#i(t,i);if(i instanceof s)return r.#e(t,i)}throw Error("invalid object type")}static dist(t,i){let e=i.x-t.x,s=i.y-t.y;return Math.sqrt(e*e+s*s)}static #t(t,i){return this.dist(t,i)<=t.r+i.r}static #s(t,i){return this.dist(i,t)<=i.r}static #r(t,i,e){let s=this.dist(t,i),r=this.dist(t,e),n=this.dist(i,e);return n-.1<=s+r&&s+r<=n+.1}static #n(t,i,e){let s=this.#s(t,e),r=this.#s(i,e);if(s||r)return!0;let n=this.dist(i,t),h=((e.x-t.x)*(i.x-t.x)+(e.y-t.y)*(i.y-t.y))/(n*n),l={x:t.x+h*(i.x-t.x),y:t.y+h*(i.y-t.y)};return!!this.#r(l,t,i)&&this.dist(l,e)<=e.r}static #h(t,i,e,s){let r=((s.x-e.x)*(t.y-e.y)-(s.y-e.y)*(t.x-e.x))/((s.y-e.y)*(i.x-t.x)-(s.x-e.x)*(i.y-t.y)),n=((i.x-t.x)*(t.y-e.y)-(i.y-t.y)*(t.x-e.x))/((s.y-e.y)*(i.x-t.x)-(s.x-e.x)*(i.y-t.y));return 0<=r&&r<=1&&0<=n&&n<=1}static #i(t,i){let e=t.vertices;if(this.#l(t,i))return!0;let s=0;for(let t=0;t<e.length;t++){(s=t+1)===e.length&&(s=0);let r=e[t],n=e[s];if(this.#n(r,n,i))return!0}return!1}static #l(t,i){let e=t.vertices,s=!1,r=0;for(let t=0;t<e.length;t++){(r=t+1)===e.length&&(r=0);let n=e[t],h=e[r];(n.y>=i.y&&h.y<i.y||n.y<i.y&&h.y>=i.y)&&i.x<(h.x-n.x)*(i.y-n.y)/(h.y-n.y)+n.x&&(s=!s)}return s}static #o(t,i,e){let s=t.vertices,r=0;for(let t=0;t<s.length;t++){(r=t+1)===s.length&&(r=0);let n=s[t],h=s[r];if(this.#h(i,e,n,h))return!0}return!1}static #e(t,i){if(this.#l(i,t)||this.#l(t,i))return!0;let e=t.vertices,s=0;for(let t=0;t<e.length;t++){(s=t+1)===e.length&&(s=0);let r=e[t],n=e[s];if(this.#o(i,r,n))return!0}return!1}}const n=document.getElementById("canvas"),h={objects:[]};for(let t=0;t<10;t++){let t=l(10,window.innerWidth-10),i=l(10,window.innerHeight-10),s=l(1,360),r=2*Math.cos(s),n=2*Math.sin(s);h.objects.push(new e(t,i,20,r,n))}for(let t=0;t<10;t++){let t=l(10,window.innerWidth-10),i=l(10,window.innerHeight-10),e=l(0,360),r=2*Math.cos(e),n=2*Math.sin(e);h.objects.push(new s(t,i,3,20,r,n))}for(let t=0;t<10;t++){let t=l(10,window.innerWidth-10),i=l(10,window.innerHeight-10),e=l(1,360),r=2*Math.cos(e),n=2*Math.sin(e);h.objects.push(new s(t,i,6,20,r,n))}function l(t,i){return Math.random()*(i-t)+t}n.width=window.innerWidth,n.height=window.innerHeight,h.lastTick=performance.now(),h.lastRender=h.lastTick,h.tickLength=15,function t(i){h.stopCycle=window.requestAnimationFrame(t);let e=h.lastTick+h.tickLength,s=0;i>e&&(s=Math.floor((i-h.lastTick)/h.tickLength)),function(t){for(let i=0;i<t;i++)h.lastTick=h.lastTick+h.tickLength,function(t){for(let t=0;t<h.objects.length;t++){let i=h.objects[t];if(i.active){for(let e=t+1;e<h.objects.length;e++){let t=h.objects[e];t.active&&r.AABBOverlap(i,t)&&r.PreciseOverlap(i,t)&&(i.vx=-i.vx,i.vy=-i.vy,i.handleCollision(),t.vx=-t.vx,t.vy=-t.vy,t.handleCollision())}(0>i.AABB.left||window.innerWidth<i.AABB.right)&&(i.vx=-i.vx,i.handleCollision(!0)),(0>i.AABB.top||window.innerHeight<i.AABB.bottom)&&(i.vy=-i.vy,i.handleCollision(!0))}}h.objects.forEach(t=>{t.active&&t.move()})}(h.lastTick)}(s),function(t){let i=n.getContext("2d");i.clearRect(0,0,n.width,n.height),h.objects.forEach(t=>{t.active&&t.draw(i)})}(0),h.lastRender=i}();